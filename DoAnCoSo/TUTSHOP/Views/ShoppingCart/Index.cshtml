@model TUTSHOP.Models.Entities.ShoppingCart

@if (Model.Items.Any())
{
    <div class="container mt-4">
        <div class="row">
            <div class="col-md-8">
                <div class="card mb-4">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5>Giỏ hàng của bạn</h5>
                        <button type="button" class="btn btn-danger btn-sm">Giỏ hàng</button>
                    </div>
                    <div class="card-body">
                        <div class="d-flex align-items-center mb-3">
                            <input type="checkbox" id="selectAll" class="round-checkbox" />
                            <label id="selectAllLabel" class="ms-2">Chọn tất cả</label>
                        </div>
                        <form id="updateCartForm" asp-action="UpdateCart" method="post">
                            @foreach (var item in Model.Items)
                            {
                                <div class="cart-item card mb-3 position-relative">
                                    <div class="card-body d-flex align-items-center justify-content-between">
                                        <div class="d-flex align-items-center">
                                            <input type="checkbox" class="item-checkbox mr-3 round-checkbox" data-id="@item.ProductId" data-price="@item.Price" data-quantity="@item.Quantity" />
                                            <img src="@item.ImageUrl" alt="@item.Name" class="img-fluid" style="height: 100px; width: 100px; object-fit:cover" />
                                            <div class="ml-3 ms-5">
                                                <h6>@item.Name</h6>
                                                <div>
                                                    <span class="new_price">@item.Price.ToString("N0")đ</span>
                                                </div>
                                                <div>Đã giảm 400.000đ</div>
                                            </div>
                                        </div>
                                        <div class="quantity-controls d-flex align-items-center">
                                            <button type="button" class="quantity-decrease btn btn-outline-secondary btn-sm">-</button>
                                            <input type="text" name="quantities[@item.ProductId]" data-productId="@item.ProductId" value="@item.Quantity" min="1" max="100" class="quantity-input form-control" data-price="@item.Price" readonly />
                                            <button type="button" class="quantity-increase btn btn-outline-secondary btn-sm">+</button>
                                        </div>
                                        <a asp-action="RemoveFromCart" asp-route-productId="@item.ProductId" class="btn btn-danger btn-sm position-absolute remove-button"><i class="fas fa-trash-alt"></i></a>
                                    </div>
                                </div>
                            }
                        </form>
                    </div>
                    <div class="card-footer">
                        <a asp-action="RemoveAll" class="btn btn-danger btn-sm">Xoá tất cả giỏ hàng</a>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-header">
                        <h5>Tạm tính</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <span>Tổng tiền:</span>
                            <strong id="totalAmount">@Model.GetTotalPrice().ToString("N0")đ</strong>
                        </div>
                        <div class="form-group mt-3">
                            <label for="discountCode">Mã giảm giá:</label>
                            <input type="text" id="discountCode" class="form-control" placeholder="Nhập mã giảm giá" disabled>
                            <button type="button" id="applyDiscountButton" class="btn btn-primary mt-2" disabled>Áp dụng</button>
                        </div>
                    </div>
                    <div class="card-footer">
                        <a id="checkoutButton" class="btn btn-success btn-block disabled" asp-action="Checkout" disabled>Đặt hàng</a>
                        <a class="btn btn-secondary btn-block" asp-controller="Home">Quay về trang chủ</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="container mt-4">
        <div class="alert alert-info" role="alert">
            Giỏ hàng của bạn hiện tại trống!!
        </div>
    </div>
}

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var cartItems = document.querySelectorAll(".cart-item");
            var selectAllCheckbox = document.getElementById("selectAll");
            var selectAllLabel = document.getElementById("selectAllLabel");
            var totalAmountElement = document.getElementById("totalAmount");
            var checkoutButton = document.getElementById("checkoutButton");
            var discountCodeInput = document.getElementById("discountCode");
            var applyDiscountButton = document.getElementById("applyDiscountButton");

            selectAllCheckbox.addEventListener("change", function () {
                var isChecked = selectAllCheckbox.checked;
                document.querySelectorAll(".item-checkbox").forEach(function (checkbox) {
                    checkbox.checked = isChecked;
                    checkbox.dispatchEvent(new Event("change"));
                });
                selectAllLabel.textContent = isChecked ? "Bỏ chọn tất cả" : "Chọn tất cả";
                updateCheckoutButton();
            });

            document.querySelectorAll(".item-checkbox").forEach(function (checkbox) {
                checkbox.addEventListener("change", function () {
                    updateTotalAmount();
                    updateSelectAllCheckbox();
                    updateCheckoutButton();
                    updateDiscountButton();
                });
            });

            $(".quantity-input").on("input", function () {
                var $input = $(this);
                var $checkbox = $input.closest(".cart-item").find(".item-checkbox");
                $checkbox.attr("data-quantity", $input.val());
                if ($checkbox.is(":checked")) {
                    updateTotalAmount();
                }
                updateCheckoutButton();
                updateDiscountButton();
            });

            $(".quantity-increase").each(function () {
                $(this).on("click", function () {
                    var $input = $(this).closest(".quantity-controls").find(".quantity-input");
                    var currentValue = parseInt($input.val());

                    $.ajax({
                        url: '/ShoppingCart/UpdateCart',
                        type: 'POST',
                        data: {
                            productId: $input.data('productid'),
                            quantity: currentValue + 1
                        },
                        success: function () {
                            if (currentValue < 100) {
                                $input.val(currentValue + 1);
                                $input.trigger("input");
                            }
                            updateCheckoutButton();
                            updateDiscountButton();
                        },
                        error: function () { }
                    });
                });
            });

            $(".quantity-decrease").on("click", function () {
                var $button = $(this);
                var $input = $button.closest(".quantity-controls").find(".quantity-input");
                var currentValue = parseInt($input.val());
                if (currentValue > 1) {
                    $input.val(currentValue - 1);
                    $input.trigger("input");
                }
                updateCheckoutButton();
                updateDiscountButton();
            });

            $('#applyDiscountButton').on('click', function () {
                var discountCode = $('#discountCode').val();
                $.ajax({
                    url: '@Url.Action("ApplyDiscount", "ShoppingCart")',
                    type: 'POST',
                    data: { discountCode: discountCode },
                    success: function (result) {
                        if (result.success) {
                            alert('Mã giảm giá đã được áp dụng. Bạn được giảm ' + result.discountAmount + ' đ');
                            $('#totalAmount').text(result.newTotalPrice + ' đ');
                        } else {
                            alert(result.message);
                        }
                    },
                    error: function () {
                        alert('Có lỗi xảy ra, vui lòng thử lại.');
                    }
                });
            });

            function updateTotalAmount() {
                var total = 0;
                document.querySelectorAll(".item-checkbox:checked").forEach(function (checkbox) {
                    var price = parseFloat(checkbox.getAttribute("data-price"));
                    var quantity = parseInt(checkbox.getAttribute("data-quantity"));
                    total += price * quantity;
                });
                totalAmountElement.textContent = total.toLocaleString("vi-VN", { style: "currency", currency: "VND" });
            }

            function updateSelectAllCheckbox() {
                var totalCheckboxes = document.querySelectorAll(".item-checkbox").length;
                var checkedCheckboxes = document.querySelectorAll(".item-checkbox:checked").length;
                selectAllCheckbox.checked = totalCheckboxes === checkedCheckboxes;
                selectAllLabel.textContent = totalCheckboxes === checkedCheckboxes ? "Bỏ chọn tất cả" : "Chọn tất cả";
            }

            function updateCheckoutButton() {
                var selectedItems = document.querySelectorAll(".item-checkbox:checked").length;
                if (selectedItems === 0) {
                    checkoutButton.textContent = "Đặt hàng";
                    checkoutButton.classList.add("disabled");
                    checkoutButton.disabled = true;
                } else {
                    checkoutButton.textContent = "Đặt hàng (" + selectedItems + ")";
                    checkoutButton.classList.remove("disabled");
                    checkoutButton.disabled = false;
                }
            }

            function updateDiscountButton() {
                var selectedItems = document.querySelectorAll(".item-checkbox:checked").length;
                if (selectedItems === 0) {
                    applyDiscountButton.classList.add("disabled");
                    applyDiscountButton.disabled = true;
                    discountCodeInput.disabled = true;
                } else {
                    applyDiscountButton.classList.remove("disabled");
                    applyDiscountButton.disabled = false;
                    discountCodeInput.disabled = false;
                }
            }

            // Initialize the checkout button text and discount button state
            updateCheckoutButton();
            updateDiscountButton();
        });
    </script>
}

<style>
    .cart-item img {
        max-height: 100px;
        width: auto;
    }

    .card-header h5 {
        margin: 0;
    }

    .new_price {
        color: red;
        font-weight: bold;
        margin-right: 10px;
    }

    .badge-danger {
        font-size: 12px;
    }

    .quantity-controls {
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .quantity-controls button {
            background-color: #f8f9fa;
            border: 1px solid #ced4da;
            padding: 5px 10px;
            cursor: pointer;
        }

        .quantity-controls input {
            width: 50px;
            text-align: center;
            border: none;
            margin: 0 5px;
        }

        .quantity-controls button:hover {
            background-color: #e2e6ea;
        }

    .remove-button {
        position: absolute;
        top: 10px;
        right: 10px;
    }

    .round-checkbox {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        background-color: #fff;
        border: 1px solid #ced4da;
        padding: 6px;
        border-radius: 50%;
        display: inline-block;
        position: relative;
    }

        .round-checkbox:checked {
            background-color: #007bff;
            border-color: #007bff;
        }

            .round-checkbox:checked::after {
                content: '\2714';
                font-size: 14px;
                color: #fff;
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
            }

    .btn.disabled, .btn:disabled {
        background-color: #e0e0e0;
        border-color: #e0e0e0;
        cursor: not-allowed;
        color: #6c757d;
    }
</style>
